{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport loginview from '../views/loginview.vue';\nimport register from '../views/register.vue';\nimport home from '../views/home.vue';\nimport admin from '../views/admin.vue';\nimport product from '../views/product.vue';\nimport cart from '../views/cart.vue';\nimport checkout from '../views/checkout.vue';\nimport landingpage from '../views/landingpage.vue';\nimport profile from '../views/profile.vue';\nimport adminprod from '../views/adminprod.vue';\nimport axios from 'axios';\nconst routes = [{\n  path: '/',\n  name: 'landingpage',\n  component: landingpage\n}, {\n  path: '/login',\n  name: 'login',\n  component: loginview\n}, {\n  path: '/signup',\n  name: 'signup',\n  component: register\n}, {\n  path: '/home',\n  name: 'home',\n  component: home,\n  meta: {\n    requiresRole: 'client'\n  }\n}, {\n  path: '/profile',\n  name: 'profile',\n  component: profile\n}, {\n  path: '/admin/dashboard',\n  name: 'admin',\n  component: admin,\n  meta: {\n    requiresRole: 'admin'\n  }\n}, {\n  path: '/admin/products',\n  name: 'adminprod',\n  component: adminprod,\n  meta: {\n    requiresRole: 'admin'\n  }\n}, {\n  path: '/cart',\n  component: cart,\n  meta: {\n    requiresRole: 'client'\n  }\n}, {\n  path: '/product',\n  component: product\n}, {\n  path: '/checkout',\n  name: 'checkout',\n  component: checkout\n}, {\n  path: '/cart',\n  name: 'Cart',\n  component: cart\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Navigation Guard\nrouter.beforeEach(async (to, from, next) => {\n  const userRole = localStorage.getItem('userRole'); // Get role from localStorage\n  const isLoggedIn = userRole !== null; // Check if a session exists\n\n  // If the route requires a specific role\n  if (to.meta.requiresRole) {\n    // Check session info from the backend\n    try {\n      const response = await axios.get('http://localhost:5555/check-session', {\n        withCredentials: true\n      });\n      if (response.data.role === to.meta.requiresRole) {\n        next(); // Role matches, proceed to route\n      } else {\n        next('/login'); // Redirect to login if the role doesn't match\n      }\n    } catch (error) {\n      console.error(error);\n      next('/login'); // Redirect to login if there's an error\n    }\n  }\n  // If trying to access the login page while already logged in // kapag may session pang naka login\n  else if (to.name === 'login' && isLoggedIn) {\n    // Redirect to the appropriate page based on the user role\n    if (userRole === 'client') {\n      next('/home'); // Redirect to home for clients\n    } else if (userRole === 'admin') {\n      next('/admin/dashboard'); // Redirect to admin dashboard\n    } else {\n      next();\n    }\n  } else {\n    next(); // No role required, proceed normally\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","loginview","register","home","admin","product","cart","checkout","landingpage","profile","adminprod","axios","routes","path","name","component","meta","requiresRole","router","history","process","env","BASE_URL","beforeEach","to","from","next","userRole","localStorage","getItem","isLoggedIn","response","get","withCredentials","data","role","error","console"],"sources":["C:/laragon/www/project_appdev/Frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport loginview from '../views/loginview.vue';\nimport register from '../views/register.vue';\nimport home from '../views/home.vue';\nimport admin from '../views/admin.vue';\nimport product from '../views/product.vue';\nimport cart from '../views/cart.vue';\nimport checkout from '../views/checkout.vue';\nimport landingpage from '../views/landingpage.vue';\nimport profile from '../views/profile.vue';\nimport adminprod from '../views/adminprod.vue';\nimport axios from 'axios';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'landingpage',\n    component: landingpage,\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: loginview,\n  },\n  {\n    path: '/signup',\n    name: 'signup',\n    component: register,\n  },\n  {\n    path: '/home',\n    name: 'home',\n    component: home,\n    meta: { requiresRole: 'client' },\n  },\n  {\n    path: '/profile',\n    name: 'profile',\n    component: profile,\n  },\n  {\n    path: '/admin/dashboard',\n    name: 'admin',\n    component: admin,\n    meta: { requiresRole: 'admin' },\n  },\n  {\n    path: '/admin/products',\n    name: 'adminprod',\n    component: adminprod,\n    meta: { requiresRole: 'admin' },\n  },\n  \n  { path: '/cart', component: cart,\n    meta: { requiresRole: 'client' },\n  },\n  { path: '/product', component: product },\n  {\n    path: '/checkout',\n    name: 'checkout',\n    component: checkout,\n  },\n  {\n    path: '/cart',\n    name: 'Cart',\n    component: cart,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\n// Navigation Guard\nrouter.beforeEach(async (to, from, next) => {\n  const userRole = localStorage.getItem('userRole'); // Get role from localStorage\n  const isLoggedIn = userRole !== null; // Check if a session exists\n\n  // If the route requires a specific role\n  if (to.meta.requiresRole) {\n    // Check session info from the backend\n    try {\n      const response = await axios.get('http://localhost:5555/check-session', { withCredentials: true });\n\n      if (response.data.role === to.meta.requiresRole) {\n        next(); // Role matches, proceed to route\n      } else {\n        next('/login'); // Redirect to login if the role doesn't match\n      }\n    } catch (error) {\n      console.error(error);\n      next('/login'); // Redirect to login if there's an error\n    }\n  } \n  // If trying to access the login page while already logged in // kapag may session pang naka login\n  else if (to.name === 'login' && isLoggedIn) {\n    // Redirect to the appropriate page based on the user role\n    if (userRole === 'client') {\n      next('/home'); // Redirect to home for clients\n    } else if (userRole === 'admin') {\n      next('/admin/dashboard'); // Redirect to admin dashboard\n    } else {\n      next(); \n    }\n  } \n  else {\n    next(); // No role required, proceed normally\n  }\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}