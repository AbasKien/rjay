{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nexport default {\n  data() {\n    return {\n      activeTab: \"details\",\n      user: {\n        fullname: \"\",\n        email: \"\",\n        phone: \"\",\n        address: \"\"\n      },\n      orders: [],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    getInitials() {\n      return this.user.fullname.split(' ').map(name => name.charAt(0)).join('').toUpperCase();\n    }\n  },\n  async mounted() {\n    await this.fetchProfile();\n    await this.fetchOrders();\n  },\n  methods: {\n    async fetchProfile() {\n      try {\n        this.loading = true;\n        const response = await fetch('http://localhost:5555/profile', {\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          if (response.status === 401) {\n            this.$router.push('/login');\n            return;\n          }\n          throw new Error('Failed to fetch profile');\n        }\n        const data = await response.json();\n        if (data.success) {\n          this.user = data.profile;\n        }\n      } catch (error) {\n        this.error = error.message;\n        console.error('Error fetching profile:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateDetails() {\n      try {\n        this.loading = true;\n        const response = await fetch('http://localhost:5555/profile', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            phone: this.user.phone,\n            address: this.user.address\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update profile');\n        }\n        const data = await response.json();\n        if (data.success) {\n          this.user = data.profile;\n          this.showNotification('Profile updated successfully!');\n        }\n      } catch (error) {\n        this.error = error.message;\n        console.error('Error updating profile:', error);\n        this.showNotification('Failed to update profile', 'error');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchOrders() {\n      try {\n        const response = await fetch('http://localhost:5555/orders', {\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          if (data.success) {\n            this.orders = data.orders;\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    },\n    formatPrice(price) {\n      return price.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n    },\n    showNotification(message, type = 'success') {\n      // You can implement a toast notification here\n      alert(message);\n    },\n    viewOrder(orderId) {\n      console.log('Viewing order:', orderId);\n    },\n    goToShop() {\n      this.$router.push('/shop');\n    }\n  }\n};","map":{"version":3,"names":["data","activeTab","user","fullname","email","phone","address","orders","loading","error","computed","getInitials","split","map","name","charAt","join","toUpperCase","mounted","fetchProfile","fetchOrders","methods","response","fetch","credentials","ok","status","$router","push","Error","json","success","profile","message","console","updateDetails","method","headers","body","JSON","stringify","showNotification","formatDate","date","Date","toLocaleDateString","year","month","day","formatPrice","price","toFixed","replace","type","alert","viewOrder","orderId","log","goToShop"],"sources":["C:\\laragon\\www\\project_appdev\\Frontend\\src\\views\\profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <div class=\"profile-wrapper\">\n      <!-- Profile Header -->\n      <div class=\"profile-header\">\n        <div class=\"profile-avatar\">\n          <span class=\"avatar-text\">{{ getInitials }}</span>\n        </div>\n        <h1>{{ user.fullname }}</h1>\n        <p class=\"email\">{{ user.email }}</p>\n      </div>\n\n      <!-- Navigation Tabs -->\n      <div class=\"profile-tabs\">\n        <button \n          :class=\"['tab-btn', { active: activeTab === 'details' }]\" \n          @click=\"activeTab = 'details'\"\n        >\n          <i class=\"fas fa-user\"></i> Profile Details\n        </button>\n        <button \n          :class=\"['tab-btn', { active: activeTab === 'orders' }]\" \n          @click=\"activeTab = 'orders'\"\n        >\n          <i class=\"fas fa-shopping-bag\"></i> Order History\n        </button>\n      </div>\n\n      <!-- Loading Spinner -->\n      <div v-if=\"loading\" class=\"loading-spinner\">\n        <div class=\"spinner\"></div>\n      </div>\n\n      <!-- Error Message -->\n      <div v-if=\"error\" class=\"error-message\">\n        {{ error }}\n      </div>\n\n      <!-- Profile Details Tab -->\n      <div v-if=\"activeTab === 'details' && !loading\" class=\"profile-details\">\n        <form @submit.prevent=\"updateDetails\" class=\"profile-form\">\n          <div class=\"form-group\">\n            <label for=\"fullname\">Full Name</label>\n            <input \n              type=\"text\" \n              id=\"fullname\" \n              v-model=\"user.fullname\" \n              required\n              class=\"form-input\"\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"email\">Email Address</label>\n            <input \n              type=\"email\" \n              id=\"email\" \n              v-model=\"user.email\" \n              readonly\n              class=\"form-input readonly\"\n            />\n            <small class=\"input-hint\">Email cannot be modified</small>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"phone\">Phone Number</label>\n            <input \n              type=\"tel\" \n              id=\"phone\" \n              v-model=\"user.phone\"\n              class=\"form-input\"\n              placeholder=\"Enter your phone number\"\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"address\">Delivery Address</label>\n            <textarea \n              id=\"address\" \n              v-model=\"user.address\"\n              class=\"form-input textarea\"\n              placeholder=\"Enter your delivery address\"\n              rows=\"3\"\n            ></textarea>\n          </div>\n\n          <button type=\"submit\" class=\"save-btn\">\n            <i class=\"fas fa-save\"></i> Save Changes\n          </button>\n        </form>\n      </div>\n\n      <!-- Orders Tab -->\n      <div v-if=\"activeTab === 'orders' && !loading\" class=\"orders-list\">\n        <div v-if=\"orders.length > 0\">\n          <div v-for=\"order in orders\" :key=\"order.id\" class=\"order-card\">\n            <div class=\"order-header\">\n              <h3>Order #{{ order.id }}</h3>\n              <span :class=\"['order-status', order.status]\">{{ order.status }}</span>\n            </div>\n            <div class=\"order-details\">\n              <p><strong>Date:</strong> {{ formatDate(order.date) }}</p>\n              <p><strong>Total:</strong> â‚±{{ formatPrice(order.total) }}</p>\n            </div>\n            <button class=\"view-order-btn\" @click=\"viewOrder(order.id)\">\n              View Details\n            </button>\n          </div>\n        </div>\n        <div v-else class=\"no-orders\">\n          <i class=\"fas fa-shopping-cart\"></i>\n          <p>No orders yet</p>\n          <button class=\"shop-now-btn\" @click=\"goToShop\">Shop Now</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      activeTab: \"details\",\n      user: {\n        fullname: \"\",\n        email: \"\",\n        phone: \"\",\n        address: \"\",\n      },\n      orders: [],\n      loading: false,\n      error: null\n    };\n  },\n\n  computed: {\n    getInitials() {\n      return this.user.fullname\n        .split(' ')\n        .map(name => name.charAt(0))\n        .join('')\n        .toUpperCase();\n    }\n  },\n\n  async mounted() {\n    await this.fetchProfile();\n    await this.fetchOrders();\n  },\n\n  methods: {\n    async fetchProfile() {\n      try {\n        this.loading = true;\n        const response = await fetch('http://localhost:5555/profile', {\n          credentials: 'include'\n        });\n        \n        if (!response.ok) {\n          if (response.status === 401) {\n            this.$router.push('/login');\n            return;\n          }\n          throw new Error('Failed to fetch profile');\n        }\n\n        const data = await response.json();\n        if (data.success) {\n          this.user = data.profile;\n        }\n      } catch (error) {\n        this.error = error.message;\n        console.error('Error fetching profile:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async updateDetails() {\n      try {\n        this.loading = true;\n        const response = await fetch('http://localhost:5555/profile', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            phone: this.user.phone,\n            address: this.user.address\n          })\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to update profile');\n        }\n\n        const data = await response.json();\n        if (data.success) {\n          this.user = data.profile;\n          this.showNotification('Profile updated successfully!');\n        }\n      } catch (error) {\n        this.error = error.message;\n        console.error('Error updating profile:', error);\n        this.showNotification('Failed to update profile', 'error');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async fetchOrders() {\n      try {\n        const response = await fetch('http://localhost:5555/orders', {\n          credentials: 'include'\n        });\n        \n        if (response.ok) {\n          const data = await response.json();\n          if (data.success) {\n            this.orders = data.orders;\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    },\n\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    },\n\n    formatPrice(price) {\n      return price.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n    },\n\n    showNotification(message, type = 'success') {\n      // You can implement a toast notification here\n      alert(message);\n    },\n\n    viewOrder(orderId) {\n      console.log('Viewing order:', orderId);\n    },\n\n    goToShop() {\n      this.$router.push('/shop');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.profile-container {\n  min-height: 100vh;\n  background-color: #f8f9fa;\n  padding: 2rem;\n}\n\n.profile-wrapper {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  border-radius: 15px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  padding: 2rem;\n}\n\n.profile-header {\n  text-align: center;\n  margin-bottom: 2rem;\n  padding-bottom: 2rem;\n  border-bottom: 1px solid #eee;\n}\n\n.profile-avatar {\n  width: 100px;\n  height: 100px;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 50%;\n  margin: 0 auto 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.avatar-text {\n  color: white;\n  font-size: 2rem;\n  font-weight: bold;\n}\n\n.profile-header h1 {\n  margin: 1rem 0 0.5rem;\n  color: #2d3748;\n  font-size: 1.8rem;\n}\n\n.email {\n  color: #718096;\n  font-size: 1rem;\n}\n\n.profile-tabs {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n}\n\n.tab-btn {\n  flex: 1;\n  padding: 1rem;\n  border: none;\n  background: #f7fafc;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  color: #4a5568;\n  font-weight: 500;\n}\n\n.tab-btn.active {\n  background: #667eea;\n  color: white;\n}\n\n.tab-btn i {\n  margin-right: 0.5rem;\n}\n\n.profile-form {\n  display: grid;\n  gap: 1.5rem;\n}\n\n.form-group {\n  display: grid;\n  gap: 0.5rem;\n}\n\n.form-group label {\n  font-weight: 500;\n  color: #4a5568;\n}\n\n.form-input {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  font-size: 1rem;\n  transition: border-color 0.3s ease;\n}\n\n.form-input:focus {\n  outline: none;\n  border-color: #667eea;\n  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n}\n\n.form-input.readonly {\n  background-color: #f7fafc;\n  cursor: not-allowed;\n}\n\n.input-hint {\n  color: #718096;\n  font-size: 0.875rem;\n}\n\n.textarea {\n  resize: vertical;\n  min-height: 100px;\n}\n\n.save-btn {\n  background: #667eea;\n  color: white;\n  border: none;\n  padding: 1rem;\n  border-radius: 8px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.save-btn:hover {\n  background: #5a67d8;\n}\n\n.loading-spinner {\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #667eea;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.error-message {\n  background: #fed7d7;\n  color: #c53030;\n  padding: 1rem;\n  border-radius: 8px;\n  margin-bottom: 1rem;\n}\n\n.orders-list {\n  display: grid;\n  gap: 1rem;\n}\n\n.order-card {\n  background: white;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  padding: 1.5rem;\n}\n\n.order-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.order-status {\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.order-status.pending {\n  background: #fef3c7;\n  color: #92400e;\n}\n\n.order-status.completed {\n  background: #dcfce7;\n  color: #166534;\n}\n\n.order-details {\n  margin-bottom: 1rem;\n}\n\n.view-order-btn {\n  width: 100%;\n  padding: 0.75rem;\n  background: #f7fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  color: #4a5568;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.view-order-btn:hover {\n  background: #edf2f7;\n}\n\n.no-orders {\n  text-align: center;\n  padding: 3rem;\n  color: #718096;\n}\n\n.no-orders i {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n}\n\n.shop-now-btn {\n  background: #667eea;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 8px;\n  margin-top: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.shop-now-btn:hover {\n  background: #5a67d8;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n@media (max-width: 640px) {\n  .profile-container {\n    padding: 1rem;\n  }\n\n  .profile-wrapper {\n    padding: 1.5rem;\n  }\n\n  .profile-tabs {\n    flex-direction: column;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}